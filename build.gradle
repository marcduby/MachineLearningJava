plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.doobs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
	platform = 'win'
} else if (currentOS.isLinux()) {
	platform = 'linux'
} else if (currentOS.isMacOsX()) {
	platform = 'mac'
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	compile "org.openjfx:javafx-base:13:${platform}"
	compile "org.openjfx:javafx-graphics:13:${platform}"
	compile "org.openjfx:javafx-controls:13:${platform}"
	compile "org.openjfx:javafx-fxml:13:${platform}"

	// dl4j
	compile "org.deeplearning4j:deeplearning4j-core:1.0.0-beta5"
	compile "org.nd4j:nd4j-native-platform:1.0.0-beta5"
	compile "org.datavec:datavec-api:1.0.0-beta5"
	compile "org.datavec:datavec-local:1.0.0-beta5"
}

test {
	useJUnitPlatform()
}
